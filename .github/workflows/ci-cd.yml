name: CI/CD Pipeline

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    name: Build and Test
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
      
      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'
          cache: 'npm'
      
      - name: Install dependencies
        run: npm ci
      
      - name: Type check
        run: npm run type-check
      
      - name: Debug directory structure
        run: find . -name "*.test.ts" -type f
      
      - name: Run tests
        run: npm test
  
  deploy:
    name: Deploy to Encore Cloud
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    needs: test
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
      
      - name: Install Encore CLI
        run: |
          curl -s https://encore.dev/install.sh | bash
          echo "$HOME/.encore/bin" >> $GITHUB_PATH
      
      - name: Set up Git for Encore
        run: |
          git config --global user.name "GitHub Actions"
          git config --global user.email "actions@github.com"
      
      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'
          
      - name: Install dependencies
        run: npm ci
      
      - name: Manually prepare authentication for Encore
        env:
          ENCORE_AUTH_TOKEN: ${{ secrets.ENCORE_AUTH_TOKEN }}
        run: |
          # Create the directory structure
          mkdir -p ~/.encore
          
          # Create the config file with the correct format based on Encore CLI version v1.46.21
          cat > ~/.encore/config.json << EOF
          {
            "auth": {
              "active_token": "$ENCORE_AUTH_TOKEN",
              "tokens": {
                "$ENCORE_AUTH_TOKEN": {
                  "CreatedAt": "$(date -u +"%Y-%m-%dT%H:%M:%SZ")"
                }
              }
            }
          }
          EOF
          chmod 600 ~/.encore/config.json
          
          # Export the auth token as environment variable
          echo "ENCORE_AUTH=$ENCORE_AUTH_TOKEN" >> $GITHUB_ENV
          
          # Verify config file
          echo "Config file created:"
          ls -la ~/.encore/
          
          # Try confirming auth status (informational only)
          encore auth status || true
      
      - name: Create custom deploy script
        env:
          ENCORE_AUTH_TOKEN: ${{ secrets.ENCORE_AUTH_TOKEN }}
        run: |
          mkdir -p ~/deploy-scripts
          
          cat > ~/deploy-scripts/deploy.sh << 'EOF'
          #!/bin/bash
          set -e
          
          # Extract app ID
          APP_ID=$(cat encore.app | grep id | cut -d'"' -f4)
          echo "App ID: $APP_ID"
          
          # Configure Git remote for Encore
          git remote remove encore 2>/dev/null || true
          git remote add encore "encore://$APP_ID.git"
          git remote -v
          
          # Set Git config for credentials
          git config credential.helper store
          echo "https://git.encore.dev" > ~/.git-credentials
          
          # Try pushing to Encore Cloud
          echo "Pushing to Encore Cloud..."
          
          # Use explicit environment variable for git-remote-encore
          export ENCORE_AUTH="${ENCORE_AUTH_TOKEN}"
          
          # Debug
          echo "Checking git executable path and version:"
          which git
          git --version
          
          echo "Checking git-remote-encore path:"
          which git-remote-encore || echo "git-remote-encore not found in PATH"
          
          echo "Checking for git remote helpers:"
          find /usr/lib/git-core/ -name "git-remote*" || true
          find ~/.encore/bin/ -name "git-remote*" || true
          
          # Print PATH
          echo "Current PATH: $PATH"
          
          # Push using explicit path to git-remote-encore
          PATH="$HOME/.encore/bin:$PATH" git push encore HEAD:refs/heads/main -f
          
          echo "Push completed!"
          EOF
          
          chmod +x ~/deploy-scripts/deploy.sh
      
      - name: Run deploy script
        env:
          ENCORE_AUTH_TOKEN: ${{ secrets.ENCORE_AUTH_TOKEN }}
        run: |
          cd $GITHUB_WORKSPACE
          export ENCORE_AUTH="${ENCORE_AUTH_TOKEN}"
          echo "Running deployment script..."
          bash ~/deploy-scripts/deploy.sh
          
      - name: Fallback to manual curl deployment (if Git push fails)
        if: failure()
        env:
          ENCORE_AUTH_TOKEN: ${{ secrets.ENCORE_AUTH_TOKEN }}
        run: |
          echo "Attempting fallback deployment via API..."
          APP_ID=$(cat encore.app | grep id | cut -d'"' -f4)
          echo "App ID: $APP_ID"
          
          # Create a tag-based deployment
          TAG="github-action-deploy-$(date +%Y%m%d%H%M%S)"
          git tag -a "$TAG" -m "GitHub Actions deployment tag"
          
          # Attempt deployment via API
          curl -v -X POST "https://api.encore.dev/apps/$APP_ID/deployments" \
            -H "Authorization: Bearer $ENCORE_AUTH_TOKEN" \
            -H "Content-Type: application/json" \
            -d "{\"tag\": \"$TAG\", \"message\": \"GitHub Actions deployment\"}"
          
          echo "Check deployment status at: https://app.encore.cloud/$APP_ID"